<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SDR on James Horton</title>
    <link>https://jjhorton.co.uk/tags/sdr/</link>
    <description>Recent content in SDR on James Horton</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <lastBuildDate>Mon, 10 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://jjhorton.co.uk/tags/sdr/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Creating a SigMF file from a PlutoSDR Capture</title>
      <link>https://jjhorton.co.uk/posts/plutosdrsigmfcapture/</link>
      <pubDate>Mon, 10 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://jjhorton.co.uk/posts/plutosdrsigmfcapture/</guid>
      <description>In this post I am going to document using the modified 2 channel Pluto SDR Radio and saving the data to a SigMF file, which includes both the original data and the meta data describing the capture that has taken place.
The first task is to install the tools that are required for the capture and saving the file to the disk.
import sys !{sys.executable} -m pip install pyadi-iio !{sys.executable} -m pip install sigmf The common tools that I will need for carrying out the processing I plan to do, numpy is for working with the number, while matlibplot is used for plotting the samples we capture and datetime is used to get the current time and date from the system</description>
    </item>
    
    <item>
      <title>Adding a second channel to the Pluto SDR</title>
      <link>https://jjhorton.co.uk/posts/plutosdr2channel/</link>
      <pubDate>Tue, 28 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://jjhorton.co.uk/posts/plutosdr2channel/</guid>
      <description>The Pluto SDR is available from a number of suppliers, I got this one from mouser, and the stock was recent enough to be one of the current version, which allows access to a great extra feature, a second Receive and Transmit Chain. All that is required is a few modifications that can be done at home to allow physical access and then enable the ports.
The first step for me was adding in the physical place for the SMA connectors that will take the signal out of the case, for this I drilled two holes to drop the panel mount connectors.</description>
    </item>
    
    <item>
      <title>Designing PCB Filters using MATLAB</title>
      <link>https://jjhorton.co.uk/posts/matlabpcbfilters/</link>
      <pubDate>Wed, 15 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jjhorton.co.uk/posts/matlabpcbfilters/</guid>
      <description>Mathworks released the RF PCB Toolbox with the latest release of MATLAB, R2021B, this toolbox allows the creation and visualisation of &amp;ldquo;Transmission lines, Couplers, Splitters, Filters, and More&amp;rdquo;, this was something that I wanted to a go at particularly the design of the filters. These filters that are just made of PCB traces have always fascinated me and given the tools that should allow me to design them, I decided to give it a go.</description>
    </item>
    
    <item>
      <title>Inspectrum with SigMF Files</title>
      <link>https://jjhorton.co.uk/posts/inspectrumsigmf/</link>
      <pubDate>Thu, 24 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jjhorton.co.uk/posts/inspectrumsigmf/</guid>
      <description>This post is as much a note to myself, for the next time that I hit this issue, which is installing Inspectrum with SigMF support.
The tool I&amp;rsquo;m installing is Inspectrum which is for analysing captured files of sampled data, primarily from Software Defined Radios. This allows for looking at signals, and analysing what is in the capture. I was looking to use this tool with some SigMF files, the Signal Meta data files are made up of a Binary File containing the sample data, and a JSON companion file, which contains details about the capture.</description>
    </item>
    
    <item>
      <title>Filter Testing</title>
      <link>https://jjhorton.co.uk/posts/filtertesting/</link>
      <pubDate>Fri, 30 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jjhorton.co.uk/posts/filtertesting/</guid>
      <description>This post is going to take a look at some Filters that I have &amp;ldquo;made at home&amp;rdquo;, for when I am experimenting with my Software Defined Radio&amp;rsquo;s. The filters are for use in the 433MHz band, and I wanted to create some bandpass filters to improve the IQ Recordings I was making, as I was getting a lot of out of band interference on my Pluto SDR.
For a 433MHz Filter I could have just purchased some pre-made boards, complete with some simple filters on ebay, there were plenty of options but they all seemed a little expensive, so what harm is there in just having a look at trying to build something myself.</description>
    </item>
    
  </channel>
</rss>
